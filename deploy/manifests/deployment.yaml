apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hackathon
  name: {{ deployment.name }}
  namespace: default
spec:
  replicas: {{ deployment.replicas }}
  minReadySeconds: 45
  selector:
    matchLabels:
      app: {{ deployment.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ deployment.name }}
    spec:
      serviceAccountName: "ksa"
      containers:
        - name: {{ deployment.name }}
          image: {{ deployment.image }}:{{ deployment.tag }}
          imagePullPolicy: Always
          ports:
            - name: liveness-port
              containerPort: {{ deployment.port }}
          env:
            - name: TZ
              value: Asia/Dhaka
            - name: RABBITMQ_URL
              value: amqp://guest:guest@rabbitmq:5672
            - name: GATEWAY_PORT
              value: "{{ deployment.port }}"
          resources:
            requests:
              cpu: 50m
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /v1/health
              port: liveness-port
            failureThreshold: 5
            periodSeconds: 600
            initialDelaySeconds: 60
          livenessProbe:
            httpGet:
              path: /v1/health
              port: liveness-port
            failureThreshold: 5
            periodSeconds: 600
            initialDelaySeconds: 60
      volumes:
      - name: config-volume
        configMap:
          name: otel-config
          items:
          - key: config.yaml
            path: config.yaml
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hackathon
  name: {{ deployment.name }}
  namespace: default
spec:
  ports:
    - name: http
      port: {{ deployment.port }}
      protocol: TCP
      targetPort: {{ deployment.port }}
  selector:
    app: {{ deployment.name }}
  sessionAffinity: ClientIP
  type: ClusterIP